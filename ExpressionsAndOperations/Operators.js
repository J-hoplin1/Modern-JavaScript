/** 
 
관계 연산자
두개의 피연산자를 비교한 결과를 논리값으로 반환한다. 주로 제어 구조에서 조건식을 만들 떄 사용한다.

== : 값이 같다

=== : 값이 같으며 타입또한 같다.

!= : 값이 다름

!== : 값이 다르며 타입 또한 다르다.

*/

console.log(2 == "2");
console.log(2 === 2);
console.log(2 === "2");

// 정수, 문자열과 같은 ㅜ언시 타입 변수의 값은 데이터 그 자체이다. 하지만 객체 타입 변수의 값은 객체의 '참조(Reference)'라는 점이 다르다.
// 즉 객체 타입 변수의 값이 같은지를 판별하는 행위는 같은 객체를 가리키는지를 판별하는 것과 같다.(여기서 같은 객체를 가르킨다 하면 메모리 주소값을 의미한다)

let a = [1,2,3];
let b = [1,2,3];
let c = a;

console.log(a == b);
console.log(a === b);
console.log(a == c); // 변수 c는 a의 참조 메모리 값을 참조하고 있으므로 가르키고 있는 메모리 주소가 동일하다.


// typeof : 단항 연산자이며 피연산자의 데이터 타입을 문자열로 반환한다.

console.log(typeof a); // object

// 조건 연산자(삼항 연산자) 주어진 조건의 참 거짓에 따라 값을 선택한다.

let p = 10;
if (p % 2 == 0){
    console.log("짝수");
}
else{
    console.log("홀수");
}

//위 조건문을 삼항 연산자로 변환하면 다음과 같다. (조건)?(참일떄 값):(거짓일때 값)

var parity = (p % 2 == 0)?"짝수":"홀수"
